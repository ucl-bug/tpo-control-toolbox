function controlGUI()
%CONTROLGUI GUI to select parameters for skull heating study.
%
% DESCRIPTION:
%     Simple GUI to select parameters for the skull heating study. Calls
%     runTPO with the selection indices.
%
% USAGE:
%     controlGUI()
% 
% ABOUT:
%     author             - Bradley Treeby
%     date               - 20th February 2023
%     last update        - 1st March 2023

% =========================================================================
% SETUP GUI
% =========================================================================

% Setup exit flag
assignin('base', 'exitFlag', false);

% Close any open version of the same GUI.
delete(findobj('tag', 'controlGUI'));

% Properties.
screenSize      = get(0, 'ScreenSize');
guiSize         = [500, 280];
columnOne       = 20;
columnTwo       = 230;
rowSpacing      = 40;
rowHeight       = 30;
textWidth       = 200;
dropDownWidth   = 250;
buttonHeight    = 40;
fontSize        = 12;

% positions are [left bottom width height]

% Create figure.
fig = figure(...
    'Position', [screenSize(3)/2 - guiSize(1)/2, screenSize(4)/2 - guiSize(2)/2, guiSize(1), guiSize(2)], ...
    'Name', 'TPO Control', ...
    'NumberTitle', 'off', ...
    'MenuBar', 'none', ...
    'Resize', 'off', ...
    'tag', 'controlGUI',...
    'CloseRequestFcn', {@appSelectorExit});

% Input options
ypos = guiSize(2) - 50;
uicontrol(fig, ...
    'Style', 'text', ...
    'String', 'Transducer', ...
    'FontSize', fontSize, ...
    'HorizontalAlignment','left', ...
    'Position', [columnOne, ypos, textWidth, rowHeight]);

transducer = uicontrol(fig, ...
    'Style', 'popupmenu', ...
    'String', {'H115-2AA (250 kHz)', 'H104 (500 kHz)'}, ...
    'FontSize', fontSize, ...
    'Position', [columnTwo, ypos + 4, dropDownWidth, rowHeight]);

ypos = ypos - rowSpacing;
uicontrol(fig, ...
    'Style', 'text', ...
    'String', 'Intensity', ...
    'FontSize', fontSize, ...
    'HorizontalAlignment','left', ...
    'Position', [columnOne, ypos, textWidth, 30]);

intensity = uicontrol(fig, ...
    'Style', 'popupmenu', ...
    'String', {'5 W/cm^2', '10 W/cm^2', '20 W/cm^2', '40 W/cm^2'}, ...
    'Value', 2, ...
    'FontSize', fontSize, ...
    'Position', [columnTwo, ypos + 4, dropDownWidth, rowHeight]);

ypos = ypos - rowSpacing;
uicontrol(fig, ...
    'Style', 'text', ...
    'String', 'Pulse Duration', ...
    'FontSize', fontSize, ...
    'HorizontalAlignment','left', ...
    'Position', [columnOne, ypos, textWidth, rowHeight]);

pulseDuration = uicontrol(fig, ...
    'Style', 'popupmenu', ...
    'String', {'75 ms', '150 ms', '300 ms'}, ...
    'Value', 2, ...
    'FontSize', fontSize, ...
    'Position', [columnTwo, ypos + 4, dropDownWidth, rowHeight]);

ypos = ypos - rowSpacing;
uicontrol(fig, ...
    'Style', 'text', ...
    'String', 'Pulse Repetition Interval', ...
    'FontSize', fontSize, ...
    'HorizontalAlignment','left', ...
    'Position', [columnOne, ypos, textWidth, rowHeight]);

pulseRepetitionInterval = uicontrol(fig, ...
    'Style', 'popupmenu', ...
    'String', {'1 s', '2 s', '4 s'}, ...
    'Value', 2, ...
    'FontSize', fontSize, ...
    'Position', [columnTwo, ypos + 4, dropDownWidth, rowHeight]);

ypos = ypos - rowSpacing;
uicontrol(fig, ...
    'Style', 'text', ...
    'String', 'Repeats', ...
    'FontSize', fontSize, ...
    'HorizontalAlignment','left', ...
    'Position', [columnOne, ypos, textWidth, rowHeight]);

numberPulses = uicontrol(fig, ...
    'Style', 'popupmenu', ...
    'String', {'50 pulses'}, ...
    'Value', 1, ...
    'FontSize', fontSize, ...
    'Position', [columnTwo, ypos + 4, dropDownWidth, rowHeight]);

ypos = ypos - rowSpacing - 10;
uicontrol(fig, ...
    'Style', 'pushbutton', ...
    'String', 'Run', ...
    'Units', 'pixels', ...
    'Position', [columnOne, ypos, guiSize(1) - 40, buttonHeight], ...
    'FontUnits', 'points', ...
    'FontSize', fontSize, ...
    'FontWeight', 'bold', ...
    'Callback', {@runTPOCallback});

% =========================================================================
% CALLBACK FUNCTIONS
% =========================================================================

    function appSelectorExit(~, ~)
        delete(fig);
    end

    function runTPOCallback(~, ~)
        disp('Running TPO...');
        runTPO(...
            transducer.Value, ...
            intensity.Value, ...
            pulseDuration.Value, ...
            pulseRepetitionInterval.Value, ...
            numberPulses.Value);
        disp('Run complete.')
    end

end
